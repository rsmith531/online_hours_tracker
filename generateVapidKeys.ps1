# PowerShell script to generate VAPID keys and append to .env file
# to run, type `. .\generateVapidKeys.ps1` in the terminal

# NOTE: this script will detect if the keys already exist in the .env, 
# If they exist, it will update them. Otherwise, it will append new keys.

# Generate VAPID keys using web-push
Write-Host "Generating VAPID keys..."
$vapidKeysOutput = npx web-push generate-vapid-keys --yes --json

# Check if the command was successful (optional, but good practice)
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error generating VAPID keys. Please ensure you have web-push installed (npm install web-push -g or npm install web-push --save-dev)."
    exit 1
}

# Parse the JSON output to extract public and private keys
# The output format is:
# {"publicKey":"<publicKey>","privateKey":"<privateKey>"}

try {
$vapidKeysJson = ConvertFrom-Json -InputObject $vapidKeysOutput
$publicKey = $vapidKeysJson.publicKey
$privateKey = $vapidKeysJson.privateKey


if (-not $publicKey -or -not $privateKey) {
    throw "Failed to parse public or private key from JSON output."
}


    Write-Host "VAPID keys generated successfully."

    # Construct the lines for the .env file
    $commentLine = "# these variables autogenerated by generateVapidKeys.ps1"
    $publicKeyLine = "VAPID_PUBLIC_KEY='$publicKey'"
    $privateKeyLine = "VAPID_PRIVATE_KEY='$privateKey'"

    # Define the .env file path (you can adjust this if needed)
    $envFilePath = ".env"

    # Check if .env file exists
    if ((Test-Path -Path $envFilePath)) {

        Write-Host "Updating existing .env file..."

        # Read the content of the .env file
        $envContent = Get-Content -Path $envFilePath

        $publicKeyUpdated = $false
        $privateKeyUpdated = $false
        $commentLineInserted = $false

# Iterate through each line and update if keys exist
        for ($i = 0; $i -lt $envContent.Count; $i++) {
            if ($envContent[$i] -match "^VAPID_PUBLIC_KEY=") {
                $envContent[$i] = $publicKeyLine
                $publicKeyUpdated = $true
            }
            if ($envContent[$i] -match "^VAPID_PRIVATE_KEY=") {
                $envContent[$i] = $privateKeyLine
                $privateKeyUpdated = $true
            }
            if ($envContent[$i] -match "^# these variables autogenerated by generateVapidKeys.ps1") {
                $commentLineInserted = $true
            }
        }

        

        # Add comment line if it's not already there (insert at the beginning)
        if (-not $commentLineInserted) {
            $envContent = @($commentLine) + $envContent
        }

        # Append keys if they were not found and updated
        if (-not $publicKeyUpdated) {
            $envContent += $publicKeyLine
        }
        if (-not $privateKeyUpdated) {
            $envContent += $privateKeyLine
        }

        # Write the updated content back to the .env file
        Set-Content -Path $envFilePath -Value ($envContent -join "`r`n")
        Write-Host "VAPID keys updated in '$envFilePath'."











    } else {
        Write-Host "Creating new .env file..."
        # Append the comment and keys to a new .env file
        Add-Content -Path $envFilePath -Value (($commentLine, $publicKeyLine, $privateKeyLine) -join "`r`n")
        Write-Host "VAPID keys appended to '$envFilePath'."

    }

    Write-Host "Make sure to add '$envFilePath' to your .gitignore file if you haven't already."
} catch {
    Write-Error "Error processing VAPID keys or .env file: $_"
    Write-Error "Raw Output was: $($vapidKeysOutput)"
    exit 1
}

Write-Host "Script completed."