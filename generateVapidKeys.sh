#!/bin/bash

# Script to generate VAPID keys and append to .env file
# to run, type `./generateVapidKeys.sh` in the terminal

# NOTE: this script will detect if the keys already exist in the .env, 
# If they exist, it will update them. Otherwise, it will append new keys.

# Generate VAPID keys using web-push
echo "Generating VAPID keys..."
vapidKeysOutput=$(npx web-push generate-vapid-keys --yes --json)

# Check if the command was successful (optional, but good practice)
if [ $? -ne 0 ]; then
  echo "Error generating VAPID keys. Please ensure you have web-push installed (npm install web-push -g or npm install web-push --save-dev)." >&2
  exit 1
fi

# Parse the JSON output to extract public and private keys
# The output format is:
# {"publicKey":"<publicKey>","privateKey":"<privateKey>"}

publicKey=$(echo "$vapidKeysOutput" | jq -r '.publicKey')
privateKey=$(echo "$vapidKeysOutput" | jq -r '.privateKey')

if [ -z "$publicKey" ] || [ -z "$privateKey" ]; then
  echo "Failed to parse public or private key from JSON output." >&2
  echo "Raw Output was: $vapidKeysOutput" >&2
  exit 1
fi

echo "VAPID keys generated successfully."

# Construct the lines for the .env file
commentLine="# these variables autogenerated by generateVapidKeys.sh"
publicKeyLine="NUXT_PUBLIC_VAPID_PUBLIC_KEY=$publicKey"
privateKeyLine="NUXT_VAPID_PRIVATE_KEY=$privateKey"

# Define the .env file path (you can adjust this if needed)
envFilePath=".env"

# Check if .env file exists
if [ -f "$envFilePath" ]; then
  echo "Updating existing .env file..."

  # Read the content of the .env file
  envContent=$(cat "$envFilePath")

  publicKeyUpdated=0
  privateKeyUpdated=0
  commentLineInserted=0

  # Iterate through each line and update if keys exist
  IFS=$'\n' read -rd '' -a lines <<< "$envContent"
  unset IFS

  for ((i=0; i<${#lines[@]}; i++)); do
    line="${lines[$i]}"
    if [[ "$line" =~ ^NUXT_PUBLIC_VAPID_PUBLIC_KEY= ]]; then
      lines[$i]="$publicKeyLine"
      publicKeyUpdated=1
    elif [[ "$line" =~ ^NUXT_VAPID_PRIVATE_KEY= ]]; then
      lines[$i]="$privateKeyLine"
      privateKeyUpdated=1
    elif [[ "$line" =~ ^# these variables autogenerated by generateVapidKeys.sh ]]; then
      commentLineInserted=1
    fi
  done

  # Add comment line if it's not already there (insert at the beginning)
  if [ $commentLineInserted -eq 0 ]; then
    lines=("${commentLine}" "${lines[@]}")
  fi

  # Append keys if they were not found and updated
  if [ $publicKeyUpdated -eq 0 ]; then
    lines+=("$publicKeyLine")
  fi
  if [ $privateKeyUpdated -eq 0 ]; then
    lines+=("$privateKeyLine")
  fi

  # Write the updated content back to the .env file
  echo "${lines[*]}" > "$envFilePath"
  echo "VAPID keys updated in '$envFilePath'."

else
  echo "Creating new .env file..."
  # Append the comment and keys to a new .env file
  echo "$commentLine" > "$envFilePath"
  echo "$publicKeyLine" >> "$envFilePath"
  echo "$privateKeyLine" >> "$envFilePath"
  echo "VAPID keys appended to '$envFilePath'."
fi

echo "Make sure to add '$envFilePath' to your .gitignore file if you haven't already."
echo "Script completed."